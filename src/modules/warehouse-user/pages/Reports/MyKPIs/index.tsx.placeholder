import React, { useState } from 'react';
import { 
  PageContainer 
} from '@ant-design/pro-components';
import { 
  Card, 
  Typography, 
  Space, 
  Button,
  Row,
  Col,
  Form,
  DatePicker,
  Select,
  Statistic,
  Divider,
  message,
  Dropdown,
  Menu
} from 'antd';
import { 
  FileSearchOutlined, 
  DownloadOutlined, 
  BarChartOutlined, 
  LineChartOutlined,
  PieChartOutlined,
  CalendarOutlined,
  FilterOutlined,
  CaretDownOutlined
} from '@ant-design/icons';
import type { RangePickerProps } from 'antd/es/date-picker';
import dayjs from 'dayjs';

const { Title, Text } = Typography;
const { RangePicker } = DatePicker;

// Define the KPI data type
interface KPIData {
  tasksCompleted: number;
  picksPerHour: number;
  accuracy: number; // Percentage
  reworkRate: number; // Percentage
  countVariances: number;
}

// Mock data for KPIs
const mockKPIData: Record<string, KPIData> = {
  today: {
    tasksCompleted: 42,
    picksPerHour: 125,
    accuracy: 98.5,
    reworkRate: 1.2,
    countVariances: 3
  },
  yesterday: {
    tasksCompleted: 38,
    picksPerHour: 118,
    accuracy: 97.8,
    reworkRate: 2.1,
    countVariances: 5
  },
  thisWeek: {
    tasksCompleted: 210,
    picksPerHour: 132,
    accuracy: 98.2,
    reworkRate: 1.5,
    countVariances: 12
  },
  lastWeek: {
    tasksCompleted: 195,
    picksPerHour: 128,
    accuracy: 97.5,
    reworkRate: 2.3,
    countVariances: 18
  }
};

// Mock data for shifts
const shiftOptions = [
  { value: 'all', label: 'All Shifts' },
  { value: 'morning', label: 'Morning (6AM-2PM)' },
  { value: 'afternoon', label: 'Afternoon (2PM-10PM)' },
  { value: 'night', label: 'Night (10PM-6AM)' },
  { value: 'weekend', label: 'Weekend' }
];

const MyKPIs: React.FC = () => {
  const [form] = Form.useForm();
  const [kpiData, setKpiData] = useState<KPIData>(mockKPIData.today);
  const [dateRange, setDateRange] = useState<RangePickerProps['value']>([dayjs(), dayjs()]);
  const [shift, setShift] = useState<string>('all');
  const [loading, setLoading] = useState(false);

  // Handle filter application
  const handleApplyFilters = async (values: any) => {
    setLoading(true);
    
    try {
      // Simulate API call delay
      await new Promise(resolve => setTimeout(resolve, 800));
      
      // In a real implementation, this would fetch data based on filters
      console.log('Applying filters:', values);
      
      // For demo purposes, we'll just use mock data
      // In a real app, you would determine which mock data to show based on the date range
      const selectedPeriod = values.dateRange && values.dateRange[0]?.isSame(dayjs(), 'day') 
        ? 'today' 
        : 'thisWeek';
      
      setKpiData(mockKPIData[selectedPeriod]);
      message.success('KPI data updated successfully');
    } catch (error) {
      message.error('Failed to update KPI data');
    } finally {
      setLoading(false);
    }
  };

  // Handle export
  const handleExport = (format: 'csv' | 'pdf') => {
    message.info(`Exporting KPI data as ${format.toUpperCase()}...`);
    console.log(`Exporting KPI data as ${format.toUpperCase()}`, {
      dateRange,
      shift,
      kpiData
    });
    
    // In a real implementation, this would generate and download the file
    // For now, we'll just show a success message after a delay
    setTimeout(() => {
      message.success(`${format.toUpperCase()} export completed`);
    }, 1500);
  };

  // Handle date range change
  const handleDateRangeChange = (dates: RangePickerProps['value']) => {
    setDateRange(dates);
  };

  // Handle shift change
  const handleShiftChange = (value: string) => {
    setShift(value);
  };

  // Reset filters to default
  const handleResetFilters = () => {
    form.resetFields();
    setDateRange([dayjs(), dayjs()]);
    setShift('all');
    setKpiData(mockKPIData.today);
    message.info('Filters reset to default (Today)');
  };

  return (
    <PageContainer
      header={{
        title: 'My KPIs',
        breadcrumb: {
          items: [
            {
              path: '/warehouse-user',
              title: 'Warehouse User',
            },
            {
              path: '/warehouse-user/reports',
              title: 'Reports',
            },
            {
              path: '',
              title: 'My KPIs',
            },
          ],
        },
        extra: [
          <Dropdown
            key="export"
            menu={{
              items: [
                {
                  key: 'csv',
                  icon: <FileSearchOutlined />,
                  label: 'Export as CSV',
                  onClick: () => handleExport('csv')
                },
                {
                  key: 'pdf',
                  icon: <FileSearchOutlined />,
                  label: 'Export as PDF',
                  onClick: () => handleExport('pdf')
                }
              ]
            }}
          >
            <Button 
              type="primary" 
              icon={<DownloadOutlined />}
            >
              Export <CaretDownOutlined />
            </Button>
          </Dropdown>
        ]
      }}
    >
      <Space direction="vertical" style={{ width: '100%' }}>
        {/* Filters Section */}
        <Card 
          title={
            <Space>
              <FilterOutlined />
              <span>Filters</span>
            </Space>
          }
        >
          <Form
            form={form}
            layout="vertical"
            onFinish={handleApplyFilters}
            initialValues={{
              dateRange: [dayjs(), dayjs()],
              shift: 'all'
            }}
          >
            <Row gutter={16}>
              <Col xs={24} md={12} lg={8}>
                <Form.Item
                  name="dateRange"
                  label="Date Range"
                  rules={[{ required: true, message: 'Please select a date range' }]}
                >
                  <RangePicker 
                    style={{ width: '100%' }}
                    onChange={handleDateRangeChange}
                    presets={[
                      { label: 'Today', value: [dayjs(), dayjs()] },
                      { label: 'Yesterday', value: [dayjs().subtract(1, 'day'), dayjs().subtract(1, 'day')] },
                      { label: 'This Week', value: [dayjs().startOf('week'), dayjs().endOf('week')] },
                      { label: 'Last Week', value: [dayjs().subtract(1, 'week').startOf('week'), dayjs().subtract(1, 'week').endOf('week')] },
                      { label: 'This Month', value: [dayjs().startOf('month'), dayjs().endOf('month')] }
                    ]}
                  />
                </Form.Item>
              </Col>
              
              <Col xs={24} md={12} lg={8}>
                <Form.Item
                  name="shift"
                  label="Shift"
                >
                  <Select
                    options={shiftOptions}
                    onChange={handleShiftChange}
                    placeholder="Select shift"
                  />
                </Form.Item>
              </Col>
              
              <Col xs={24} md={24} lg={8}>
                <Form.Item label=" ">
                  <Space>
                    <Button 
                      type="primary" 
                      htmlType="submit" 
                      loading={loading}
                    >
                      Apply Filters
                    </Button>
                    <Button onClick={handleResetFilters}>
                      Reset
                    </Button>
                  </Space>
                </Form.Item>
              </Col>
            </Row>
          </Form>
        </Card>
        
        {/* KPI Dashboard */}
        <Card 
          title={
            <Space>
              <BarChartOutlined />
              <span>KPI Dashboard</span>
            </Space>
          }
          extra={
            <Text type="secondary">
              Period: {dateRange?.[0]?.format('MMM DD, YYYY')} - {dateRange?.[1]?.format('MMM DD, YYYY')}
              {shift !== 'all' && ` | Shift: ${shiftOptions.find(s => s.value === shift)?.label}`}
            </Text>
          }
        >
          <Row gutter={[16, 16]}>
            {/* Tasks Completed Card */}
            <Col xs={24} sm={12} md={12} lg={8} xl={8}>
              <Card 
                hoverable 
                style={{ height: '100%' }}
              >
                <Statistic
                  title={
                    <Space>
                      <FileSearchOutlined style={{ color: '#1890ff' }} />
                      <span>Tasks Completed</span>
                    </Space>
                  }
                  value={kpiData.tasksCompleted}
                  precision={0}
                  valueStyle={{ color: '#1890ff' }}
                />
                <Divider style={{ margin: '12px 0' }} />
                <Text type="secondary">
                  Total tasks completed during the selected period
                </Text>
              </Card>
            </Col>
            
            {/* Picks/Hour Card */}
            <Col xs={24} sm={12} md={12} lg={8} xl={8}>
              <Card 
                hoverable 
                style={{ height: '100%' }}
              >
                <Statistic
                  title={
                    <Space>
                      <LineChartOutlined style={{ color: '#52c41a' }} />
                      <span>Picks/Hour</span>
                    </Space>
                  }
                  value={kpiData.picksPerHour}
                  precision={0}
                  valueStyle={{ color: '#52c41a' }}
                />
                <Divider style={{ margin: '12px 0' }} />
                <Text type="secondary">
                  Average picking productivity per hour
                </Text>
              </Card>
            </Col>
            
            {/* Accuracy Card */}
            <Col xs={24} sm={12} md={12} lg={8} xl={8}>
              <Card 
                hoverable 
                style={{ height: '100%' }}
              >
                <Statistic
                  title={
                    <Space>
                      <PieChartOutlined style={{ color: '#722ed1' }} />
                      <span>Accuracy</span>
                    </Space>
                  }
                  value={kpiData.accuracy}
                  precision={1}
                  suffix="%"
                  valueStyle={{ color: '#722ed1' }}
                />
                <Divider style={{ margin: '12px 0' }} />
                <Text type="secondary">
                  Overall accuracy percentage for completed tasks
                </Text>
              </Card>
            </Col>
            
            {/* Rework Rate Card */}
            <Col xs={24} sm={12} md={12} lg={8} xl={8}>
              <Card 
                hoverable 
                style={{ height: '100%' }}
              >
                <Statistic
                  title={
                    <Space>
                      <BarChartOutlined style={{ color: '#faad14' }} />
                      <span>Rework Rate</span>
                    </Space>
                  }
                  value={kpiData.reworkRate}
                  precision={1}
                  suffix="%"
                  valueStyle={{ color: '#faad14' }}
                />
                <Divider style={{ margin: '12px 0' }} />
                <Text type="secondary">
                  Percentage of tasks requiring rework
                </Text>
              </Card>
            </Col>
            
            {/* Count Variances Card */}
            <Col xs={24} sm={12} md={12} lg={8} xl={8}>
              <Card 
                hoverable 
                style={{ height: '100%' }}
              >
                <Statistic
                  title={
                    <Space>
                      <BarChartOutlined style={{ color: '#f5222d' }} />
                      <span>Count Variances</span>
                    </Space>
                  }
                  value={kpiData.countVariances}
                  precision={0}
                  valueStyle={{ color: '#f5222d' }}
                />
                <Divider style={{ margin: '12px 0' }} />
                <Text type="secondary">
                  Number of inventory count discrepancies
                </Text>
              </Card>
            </Col>
          </Row>
        </Card>
        
        {/* Chart Placeholders */}
        <Card 
          title={
            <Space>
              <LineChartOutlined />
              <span>Trend Analysis</span>
            </Space>
          }
        >
          <Row gutter={[16, 16]}>
            <Col span={24}>
              <Card size="small">
                <div style={{ textAlign: 'center', padding: '40px 0' }}>
                  <LineChartOutlined style={{ fontSize: '48px', color: '#1890ff' }} />
                  <Title level={4} style={{ marginTop: 16 }}>
                    Productivity Trend
                  </Title>
                  <Text type="secondary">
                    Line chart showing productivity trends over time
                  </Text>
                </div>
              </Card>
            </Col>
            
            <Col span={24}>
              <Card size="small">
                <div style={{ textAlign: 'center', padding: '40px 0' }}>
                  <BarChartOutlined style={{ fontSize: '48px', color: '#52c41a' }} />
                  <Title level={4} style={{ marginTop: 16 }}>
                    Accuracy Comparison
                  </Title>
                  <Text type="secondary">
                    Bar chart comparing accuracy rates across different periods
                  </Text>
                </div>
              </Card>
            </Col>
          </Row>
        </Card>
        
        {/* Additional Information */}
        <Card 
          title={
            <Space>
              <FileSearchOutlined />
              <span>Report Information</span>
            </Space>
          }
        >
          <Row gutter={[16, 16]}>
            <Col xs={24} md={12}>
              <Card size="small" title="KPI Definitions">
                <ul>
                  <li><Text strong>Tasks Completed:</Text> Total number of tasks finished</li>
                  <li><Text strong>Picks/Hour:</Text> Average picking rate per hour</li>
                  <li><Text strong>Accuracy:</Text> Percentage of error-free tasks</li>
                  <li><Text strong>Rework Rate:</Text> Percentage of tasks requiring correction</li>
                  <li><Text strong>Count Variances:</Text> Inventory discrepancies found</li>
                </ul>
              </Card>
            </Col>
            
            <Col xs={24} md={12}>
              <Card size="small" title="How to Use">
                <ol>
                  <li>Select a date range to analyze historical performance</li>
                  <li>Filter by shift to see specific team performance</li>
                  <li>Apply filters to update the dashboard</li>
                  <li>Export data for further analysis</li>
                  <li>Compare current performance with previous periods</li>
                </ol>
              </Card>
            </Col>
          </Row>
        </Card>
      </Space>
    </PageContainer>
  );
};

export default MyKPIs;